Search.setIndex({"docnames": ["apisource/modules", "apisource/recursiveRouteChoice", "apisource/recursiveRouteChoice.data_loading", "apisource/recursiveRouteChoice.data_processing", "apisource/recursiveRouteChoice.optimisers", "apisource/recursiveRouteChoice.recursive_logit_efficient_update", "apisource/recursiveRouteChoice.recursive_route_choice", "index", "source/data_formats", "source/introduction_install", "source/involved_example", "source/simple_example"], "filenames": ["apisource/modules.rst", "apisource/recursiveRouteChoice.rst", "apisource/recursiveRouteChoice.data_loading.rst", "apisource/recursiveRouteChoice.data_processing.rst", "apisource/recursiveRouteChoice.optimisers.rst", "apisource/recursiveRouteChoice.recursive_logit_efficient_update.rst", "apisource/recursiveRouteChoice.recursive_route_choice.rst", "index.rst", "source/data_formats.rst", "source/introduction_install.rst", "source/involved_example.rst", "source/simple_example.rst"], "titles": ["recursiveRouteChoice", "recursiveRouteChoice package", "Data Loading: (recursiveRouteChoice.data_loading)", "Data Preprocessing: (recursiveRouteChoice.data_processing)", "Optimisers Submodule: Main use case", "Model: Sherman Morrison Variant (recursiveRouteChoice.recursive_logit_efficient_update)", "Model: Main Recursive Logit Implementation (recursiveRouteChoice.recursive_route_choice)", "Documentation for RecursiveRouteChoice", "<span class=\"section-number\">5. </span>Data Format Support", "<span class=\"section-number\">1. </span>Overview", "<span class=\"section-number\">4. </span>Sioux Falls Example", "<span class=\"section-number\">3. </span>A Simple Example"], "terms": {"packag": [0, 7, 9], "submodul": [0, 7], "optimis": [0, 1, 5, 6, 10, 11], "main": [0, 1, 9], "us": [0, 1, 2, 5, 6, 8, 9, 10, 11], "case": [0, 1, 2, 3, 5, 6, 9, 10, 11], "optimisers_fil": 0, "other": [0, 1, 3], "file": [0, 1, 2, 3, 6, 10], "minim": [0, 1], "public": [0, 1], "api": [0, 1, 5], "extra_optim": 0, "modul": [0, 7], "hessian_approx": 0, "line_search": 0, "data": [0, 1, 4, 5, 6, 7, 9, 10, 11], "load": [0, 1, 3], "data_load": [0, 1, 10], "load_csv_to_spars": [0, 2], "load_obs_from_json": [0, 2], "load_standard_path_format_csv": [0, 2], "load_tntp_node_formul": [0, 2, 10], "load_tntp_to_sparse_arc_formul": [0, 2], "resize_to_dim": [0, 2], "write_obs_to_json": [0, 2], "preprocess": [0, 1, 2], "data_process": [0, 1], "angleprocessor": [0, 3], "get_incorrect_tien_turn_matric": [0, 3], "model": [0, 1, 4, 7, 8, 9, 10, 11], "recurs": [0, 1, 4, 5, 7, 9], "logit": [0, 1, 4, 5, 7, 9], "implement": [0, 1, 4, 5, 7, 9], "recursive_route_choic": [0, 1, 5], "modeldatastruct": [0, 5, 6, 10, 11], "recursivelogitmodel": [0, 5, 6], "recursivelogitmodelestim": [0, 5, 6, 10, 11], "recursivelogitmodelpredict": [0, 5, 6, 10, 11], "sherman": [0, 1, 10], "morrison": [0, 1, 10], "variant": [0, 1, 9, 10], "recursive_logit_efficient_upd": [0, 1], "denseluobj": [0, 5], "recursivelogitmodelestimationsm": [0, 5, 10], "recursivelogitmodelpredictionsm": [0, 5, 10], "contain": [2, 4, 5, 6], "io": 2, "standard": 2, "step": [2, 4, 6], "construct": [2, 10], "matric": [2, 3, 6], "from": [2, 3, 4, 5, 6, 8, 9, 10, 11], "input": [2, 4, 5, 6, 11], "fname": [2, 4], "dtype": 2, "none": [2, 3, 4, 5, 6], "delim": 2, "square_matrix": 2, "true": [2, 4, 5, 6, 8], "shape": [2, 10], "coo_matrix": 2, "function": [2, 3, 4, 5, 6, 8, 10], "row": [2, 6], "col": [2, 6], "val": 2, "csv": 2, "return": [2, 4, 5, 6], "spars": [2, 5, 6, 8, 10], "scipi": [2, 4, 5, 6, 9], "matrix": [2, 3, 5, 6, 8, 10, 11], "paramet": [2, 3, 4, 5, 6, 9, 10, 11], "str": [2, 4, 6], "option": [2, 4, 5, 6], "bool": [2, 5, 6], "mean": [2, 3], "should": [2, 3, 4, 5, 6, 8, 9], "squar": 2, "we": [2, 3, 4, 5, 6, 8, 9, 10, 11], "try": [2, 3, 11], "ad": [2, 8], "thi": [2, 3, 4, 5, 6, 8, 9, 10, 11], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "commonli": 2, "requir": [2, 4], "type": [2, 5, 6], "coo": [2, 7], "filenam": 2, "directory_path": 2, "match_tt_shap": 2, "fals": [2, 4, 5, 6, 10, 11], "angles_includ": 2, "observ": [2, 5, 6, 7, 9, 10, 11], "list": [2, 4, 5, 6, 8, 9], "specifi": [2, 4, 6, 8, 9, 10], "directori": 2, "param": 2, "folder": 2, "which": [2, 4, 5, 6, 9, 10, 11], "o": [2, 6, 10], "pathlik": [2, 6], "ani": [2, 6, 8, 9], "separ": [2, 5], "e": [2, 3, 5], "trim": 2, "all": [2, 3, 4, 6, 8], "have": [2, 3, 4, 5, 6, 8, 9, 10], "same": [2, 6, 10, 11], "travel": [2, 8], "time": [2, 5, 10], "mtrix": 2, "boolean": [2, 5, 6], "flag": [2, 4, 5, 6], "control": 2, "whether": [2, 6], "angl": [2, 3], "expect": [2, 10], "rtype": [2, 4], "tupl": 2, "dok_matrix": [2, 6], "net_fpath": 2, "columns_to_extract": 2, "sparse_format": 2, "path": [2, 6, 10], "network": [2, 5, 6, 9, 10, 11], "column": [2, 6], "keep": 2, "init_nod": 2, "term_nod": 2, "ar": [2, 3, 4, 5, 6, 8, 9, 10, 11], "alwai": 2, "kept": 2, "form": [2, 5], "basi": 2, "arc": [2, 3, 4, 6, 8, 9, 11], "current": [2, 3, 4, 5, 6, 9], "onli": [2, 4, 5, 6, 9], "length": 2, "support": [2, 4, 6, 7], "sinc": [2, 3, 8, 9, 10, 11], "convers": 2, "node": [2, 8, 10], "clear": [2, 4, 6, 9], "legal": [2, 6, 8], "extract": 2, "capac": [2, 10], "free_flow_tim": 2, "b": [2, 4, 5, 6, 10], "power": 2, "speed": 2, "critical_spe": 2, "toll": 2, "link_typ": 2, "lane": 2, "note": [2, 3, 4, 5, 6, 8, 9, 10], "some": [2, 7, 9, 11], "constant": 2, "across": 2, "redund": 2, "includ": [2, 6], "use_file_order_for_arc_numb": 2, "standardis": [2, 10], "read": [2, 4, 8], "name": [2, 6], "attribut": [2, 5, 6, 9, 10, 11], "extra": 2, "dict": 2, "expected_max_shap": 2, "matrix_name_debug": 2, "provid": [2, 4, 6, 10, 11], "resiz": [2, 6], "dim": 2, "issu": [2, 5, 6, 9], "warn": 2, "lose": 2, "applic": [2, 8, 9], "more": [2, 4, 5, 7, 8, 9, 10], "gener": [2, 3, 4, 5, 6, 11], "than": [2, 5, 8, 9], "error": [2, 5, 6, 10], "messag": 2, "suggest": [2, 5, 9], "fact": [2, 9], "essenti": 2, "numpi": [2, 5, 6, 8, 10, 11], "behav": [2, 5], "differ": [2, 10], "also": [2, 4, 6, 8, 9, 10, 11], "upcast": 2, "dimens": [2, 9], "too": 2, "small": [2, 10], "easier": 2, "larg": [2, 5, 6], "correct": [2, 9], "limit": 2, "size": [2, 4, 10], "except": [2, 4, 9], "get": [2, 4, 5, 6, 10], "thrown": 2, "int": [2, 5, 6, 11], "": [2, 4, 6, 8, 9], "2": [2, 3, 4, 8, 10, 11], "ob": [2, 10, 11], "allow_rewrit": 2, "process": 3, "after": [3, 4, 8], "thei": 3, "been": [3, 4, 6, 9, 10], "hand": 3, "just": 3, "class": [3, 4, 5, 6, 10, 11], "base": [3, 4, 5, 6, 8, 9], "object": [3, 4, 5, 6], "classmethod": 3, "get_left_turn_categorical_matrix": 3, "turn_angle_mat": 3, "left_turn_thresh": 3, "u_turn_thresh": 3, "assum": [3, 4, 11], "between": [3, 4, 5, 6, 9, 10, 11], "pi": 3, "get_neutral_turn_categorical_matrix": 3, "side_turn_thresh": 3, "zero": [3, 6, 8, 10], "absent": 3, "genuin": 3, "encod": [3, 8], "nonzero": 3, "0": [3, 4, 5, 6, 8, 10, 11], "01": 3, "6": [3, 4, 8, 11], "28": 3, "IF": 3, "handl": 3, "otherwis": 3, "first": [3, 9, 11], "left": [3, 8], "right": [3, 6], "turn": [3, 9], "threshold": 3, "symmetr": 3, "u": [3, 4, 9], "radian": 3, "get_right_turn_categorical_matrix": 3, "right_turn_thresh": 3, "get_turn_categorical_matric": 3, "turn_angles_ct": 3, "incidence_mat": [3, 10, 11], "get_u_turn_categorical_matrix": 3, "to_radian": 3, "angle_turn_mat": 3, "5235987755833333": 3, "3": [3, 4, 8, 11], "089232775941667": 3, "A": [3, 5, 7], "equival": 3, "tien": [3, 4, 8, 9], "mai": [3, 4, 5, 6, 8, 9], "code": [3, 4, 5, 6, 8, 9, 10, 11], "comparison": 3, "purpos": [3, 6], "logic": [3, 4], "incorrect": 3, "though": 3, "deliber": 3, "copi": [3, 5], "confus": [3, 8], "consist": [3, 5, 6, 9], "comput": [3, 4, 6], "correctli": 3, "convolut": 3, "wai": [3, 10], "skip": 3, "leftturn": 3, "overridden": 3, "an": [3, 4, 5, 6, 7, 8, 9, 10, 11], "incid": [3, 6, 10, 11], "user": [4, 5, 6], "access": [4, 11], "point": [4, 9], "import": [4, 9, 10, 11], "piec": 4, "alreadi": [4, 5, 6], "directli": [4, 6], "namespac": 4, "The": [4, 5, 6, 8, 9, 11], "interest": 4, "scipyoptimis": [4, 5, 6, 10, 11], "interfac": [4, 5, 9, 11], "algorithm": [4, 5, 6, 9, 10], "customoptimiserbas": 4, "hessian_typ": 4, "optimhessiantyp": 4, "bfg": [4, 10, 11], "max_it": 4, "4": [4, 8, 11], "optimiserbas": [4, 5, 6], "global": 4, "wrapper": [4, 5, 6], "around": [4, 5], "optim": [4, 6, 11], "alg": 4, "deleg": 4, "sub": [4, 10], "individu": 4, "need": [4, 5, 6, 9, 11], "about": [4, 9], "properti": 4, "effect": [4, 6], "store": [4, 5, 6, 8, 10], "state": [4, 5, 6, 9], "review": 4, "perspect": 4, "allow": [4, 5, 6, 8, 9], "know": [4, 6], "detail": [4, 7, 10], "itself": 4, "wrap": 4, "__init__": [4, 5, 6], "check_stopping_criteria": 4, "compute_relative_gradient_non_stat": 4, "typf": 4, "1": [4, 5, 6, 8, 10, 11], "norm": 4, "rel": [4, 5], "gradient": [4, 6], "exist": 4, "inform": 4, "stop": 4, "criteria": 4, "where": [4, 5, 8, 9], "field": 4, "explicit": 4, "refer": [4, 9], "would": [4, 8, 9], "messi": [4, 5, 6], "iterate_step": 4, "verbos": [4, 6, 10, 11], "output_fil": [4, 6], "debug_count": 4, "set_beta_vec": 4, "beta_vec": [4, 6], "set_current_valu": 4, "valu": [4, 5, 6, 8, 9, 11], "linesearchoptimis": [4, 5, 6], "curvature_condition_paramet": 4, "9": [4, 8], "initial_step_length": 4, "maximum_step_length": 4, "1000": [4, 6], "method_flag": 4, "minimum_step_length": 4, "negative_curvature_paramet": 4, "sufficient_decrease_paramet": 4, "0001": [4, 10], "x_toler": 4, "2e": 4, "16": 4, "get_iteration_log": 4, "optim_v": 4, "optimfunctionst": 4, "perform": 4, "singl": [4, 8, 11], "line": [4, 8, 9], "search": [4, 7, 9], "iter": [4, 6, 10], "evalu": [4, 6], "take": 4, "upon": [4, 6], "optimtyp": 4, "enum": 4, "enumer": 4, "trust_region": 4, "abc": [4, 6], "both": [4, 7], "custom": 4, "inherit": [4, 5, 6], "ll_error_valu": 4, "99999": 4, "numerical_error_thresh": 4, "001": 4, "residu": [4, 5, 6], "method": [4, 5, 10, 11], "fd_option": 4, "conform": 4, "format": [4, 7, 9, 10], "master": 4, "cg": 4, "newton": 4, "l": [4, 10], "tnc": 4, "dogleg": 4, "trust": 4, "ncg": 4, "valid": [4, 8], "krylov": [4, 5], "solv": [4, 5, 6, 10, 11], "optim_function_st": 4, "beta": [4, 5, 6, 10, 11], "minimis": [4, 6], "neg": [4, 5, 6], "log": [4, 6], "likelihood": [4, 6], "analog": 4, "don": [4, 5, 6, 11], "t": [4, 5, 6, 8, 11], "intervent": 4, "trustregionoptimis": 4, "float": [4, 5, 6], "grad": 4, "arrai": [4, 5, 6, 8, 10, 11], "hessian": 4, "hessian_approx_typ": 4, "val_and_grad_evaluation_funct": 4, "function_evals_stat": 4, "element": 4, "relev": 4, "bridg": 4, "rl": 4, "x_vec": 4, "particular": 4, "x": 4, "val_grad_funct": 4, "update_hessian_approx": 4, "approx_method": 4, "delta_grad": 4, "thuent": 4, "port": [4, 9], "matlab": [4, 8], "modifi": [4, 5, 6], "document": [4, 5, 9], "j": 4, "d": 4, "guarante": 4, "suffici": 4, "decreas": 4, "tom": 4, "20": 4, "septemb": 4, "1994": 4, "pg": 4, "286": 4, "307": 4, "linesearchflag": 4, "termination_interval_too_smal": 4, "termination_max_func_ev": 4, "5": [4, 5, 6, 8, 10, 11], "termination_rounding_error": 4, "termination_stpmax": 4, "termination_stpmin": 4, "termination_strong_wolfe_and_stpmax": 4, "7": [4, 8], "termination_strong_wolfe_met": 4, "line_search_asrch": 4, "fcn": 4, "f": [4, 11], "g": 4, "stp": 4, "maxfev": 4, "ncur": 4, "ftol": 4, "gtol": 4, "xtol": 4, "stpmin": 4, "stpmax": 4, "print_flag": 4, "bisect": 4, "output": [4, 5, 6], "info_out_flag": 4, "nfev": 4, "variabl": [4, 5, 6], "extrap": 4, "extrapol": 4, "is_bracket": 4, "onc": [4, 8, 10], "bracket": 4, "solut": [4, 5, 6, 10], "found": 4, "statu": 4, "number": [4, 5, 6], "displac": 4, "vector": [4, 6], "deriv": 4, "stx": 4, "fx": 4, "dx": 4, "sty": 4, "fy": 4, "dy": 4, "trial": 4, "fp": 4, "dp": 4, "mfx": 4, "mdx": 4, "mfp": 4, "mdp": 4, "al": 4, "au": 4, "defin": 4, "bound": 4, "one": [4, 6, 8, 10], "endpoint": 4, "order": [4, 10, 11], "finit": 4, "initi": [4, 5, 6, 10, 11], "ginit": 4, "amin": 4, "minimium": 4, "amax": 4, "maximum": 4, "ucas": 4, "updat": [4, 5, 6, 10], "line_search_astep": 4, "brackt": 4, "safeguard": 4, "procedur": 4, "interv": [4, 5, 6], "satisfi": 4, "curvatur": 4, "condit": [4, 6], "least": 4, "If": [4, 5, 6, 9, 10], "set": [4, 5, 6, 9], "ha": [4, 9], "subroutin": 4, "min": 4, "max": 4, "direct": [4, 9], "statement": 4, "stf": 4, "doubl": 4, "precis": 4, "On": 4, "entri": [4, 8], "best": 4, "obtain": 4, "so": [4, 5, 8, 10], "far": 4, "must": 4, "opposit": 4, "sign": 4, "second": [4, 10], "lower": 4, "upper": 4, "minpack": 4, "project": 4, "june": 4, "1983": 4, "argonn": 4, "nation": 4, "laboratori": 4, "jorg": 4, "david": 4, "novemb": 4, "1993": 4, "univers": 4, "minnesota": 4, "brett": 4, "m": [4, 5, 6, 10], "averick": 4, "predict": [5, 6, 7, 8, 9], "estim": [5, 6, 7, 9, 10], "effici": [5, 6, 7, 8], "veri": [5, 10, 11], "similar": 5, "py": 5, "instead": 5, "formula": [5, 10], "save": 5, "substanti": 5, "invers": 5, "calcul": [5, 6], "empir": 5, "test": [5, 10], "explicitli": [5, 10], "much": 5, "faster": 5, "less": [5, 9, 10], "numerical": 5, "stabl": 5, "lu": 5, "In": [5, 6, 9], "either": [5, 6, 9], "like": [5, 6, 8], "dens": [5, 10], "subspac": 5, "instanc": [5, 6, 9, 10], "mat": 5, "lu_factor": 5, "lu_solv": 5, "usag": [5, 10], "superlu": 5, "decomp": 5, "tran": 5, "overwrite_b": 5, "check_finit": 5, "ax": 5, "via": 5, "back": 5, "substitut": 5, "wa": [5, 6, 8, 10, 11], "initialis": [5, 6, 11], "For": 5, "see": [5, 6, 7, 8, 9, 10], "linalg": 5, "data_struct": [5, 6], "observations_record": [5, 6, 10, 11], "initial_beta": [5, 6, 10, 11], "mu": [5, 6, 10, 11], "sort_ob": [5, 6], "desir": [5, 6], "routin": [5, 6], "ak": [5, 6], "highlighlevel": [5, 6], "spmatrix": [5, 6], "record": [5, 6], "guess": [5, 6, 11], "begin": [5, 6], "scalar": [5, 6], "uniformli": [5, 6], "scale": [5, 6, 10], "gumbel": [5, 6], "random": [5, 6], "being": [5, 6, 8, 10, 11], "equal": [5, 6], "non": [5, 6], "identifi": [5, 6], "due": [5, 6, 9, 10], "uncertainti": [5, 6], "weight": [5, 6, 11], "sort": [5, 6], "cach": [5, 6], "known": [5, 6, 8], "compute_value_funct": [5, 6], "m_tild": [5, 6], "data_is_spars": [5, 6], "linear": [5, 6, 10], "system": [5, 6, 10], "z": [5, 6], "mz": [5, 6], "futur": [5, 6], "indic": [5, 6], "success": [5, 6], "csr_matrix": [5, 6], "reflect": [5, 6], "locat": [5, 6], "sink": [5, 6, 8], "destin": [5, 6, 8, 10], "suppli": [5, 6, 11], "check": [5, 6, 9], "manual": [5, 6], "error_flag": [5, 6], "encount": [5, 6], "els": [5, 6], "execut": [5, 6], "finish": [5, 6], "successfulli": [5, 6], "high": [5, 6], "real": [5, 6], "update_base_matrix_system": 5, "update_beta_vec": [5, 6], "new_beta_vec": [5, 6], "from_init": [5, 6], "subclass": [5, 6], "avoid": [5, 6], "depend": [5, 6], "sequenc": [5, 6, 8], "fail": [5, 6, 10], "ill": [5, 6, 9], "chosen": [5, 6], "posit": [5, 6], "illeg": [5, 6], "magnitud": [5, 6, 10], "short": [5, 6], "term": [5, 6, 8, 10], "util": [5, 6], "overflow": [5, 6], "end": [5, 6, 10], "intern": [5, 6, 8], "bit": 5, "becaus": [5, 8], "theres": 5, "problem": [5, 6, 10], "potenti": 5, "fix": 5, "roll": 5, "two": [5, 6, 8, 9], "togeth": [5, 6], "might": 5, "want": 5, "them": 5, "total": [5, 11], "could": 5, "common": 5, "look": 5, "mro": 5, "correspond": [5, 6, 10], "array_lik": [5, 6], "parent": 5, "rather": [5, 11], "duplic": 5, "structur": [6, 10], "data_attribute_list": 6, "union": 6, "ndarrai": 6, "incidence_matrix": 6, "data_array_names_debug": [6, 11], "struct": 6, "conveni": [6, 8, 10], "manner": [6, 9], "addition": 6, "hasn": 6, "done": 6, "pad": [6, 8], "addit": 6, "bottom": 6, "dummi": [6, 8], "map": 6, "perhap": 6, "particularli": [6, 8], "here": [6, 9, 10, 11], "quantiti": 6, "later": 6, "instanti": 6, "plaintext": 6, "descriptor": 6, "debug": 6, "print": [6, 10, 11], "dest": [6, 8], "unless": 6, "you": 6, "what": 6, "do": [6, 11], "safety_check": 6, "abstract": 6, "algebra": 6, "oper": 6, "get_beta_vec": 6, "get_exponential_utility_matrix": [6, 10], "exponenti": 6, "mathemat": [6, 9], "notat": 6, "m_": 6, "short_term_util": 6, "get_short_term_util": 6, "r": 6, "v": 6, "k": 6, "fosgerau": [6, 9, 11], "zeros_error_overrid": 6, "extens": [6, 9], "eval_log_like_at_new_beta": 6, "vec": 6, "lambda": 6, "bad": 6, "functool": 6, "partial": 6, "get_log_likelihood": 6, "its": 6, "howev": [6, 9, 10], "log_like_stor": 6, "self": [6, 11], "grad_stor": 6, "get_value_func_grad_orig": 6, "orig_index": 6, "exp_val_func": 6, "reli": 6, "origin": [6, 8, 9, 10], "gradvalfnorig": 6, "companion": 6, "gradvalfn2": 6, "compon": [6, 9, 10], "part": [6, 9], "appli": 6, "z_": 6, "orig": [6, 8], "rest": 6, "_": 6, "solve_for_optimal_beta": [6, 10, 11], "init": 6, "determin": [6, 11], "most": 6, "send": 6, "simul": [6, 9, 10, 11], "hope": [6, 9], "can": [6, 8, 9, 10], "unifi": 6, "well": [6, 8, 10], "probabl": 6, "generate_observ": [6, 11], "origin_indic": [6, 11], "dest_indic": [6, 10, 11], "num_obs_per_pair": [6, 10, 11], "iter_cap": [6, 10, 11], "rng_seed": [6, 10, 11], "start": [6, 10], "each": [6, 8, 9], "od": [6, 10], "pair": [6, 10], "cap": 6, "converg": [6, 11], "hopefulli": [6, 11], "occur": 6, "happen": 6, "np": [6, 10, 11], "bitgener": 6, "default_rng": 6, "output_path_list": 6, "python": [7, 9], "rout": 7, "choic": 7, "It": [7, 9], "instal": 7, "simpl": [7, 8, 9], "exampl": [7, 8, 9], "sioux": 7, "fall": 7, "assumpt": 7, "json": 7, "prefer": 7, "index": [7, 8], "page": 7, "link1": 8, "link2": 8, "linkn": 8, "below": 8, "natur": 8, "lead": 8, "collect": [8, 10], "without": [8, 10], "repositori": 8, "As": 8, "consid": [8, 9], "discuss": 8, "8": [8, 10], "appear": [8, 10], "append": 8, "visit": 8, "reason": [8, 9], "rag": 8, "possibl": 8, "nativ": 8, "out": [8, 9], "work": [8, 9], "special": 8, "signific": [8, 9], "represent": [8, 10], "arbitrari": [8, 11], "indent": 8, "suffic": 8, "awkward": 8, "wouldn": 8, "per": [8, 10], "abov": [8, 11], "block": 8, "sparsiti": 8, "pattern": 8, "justifi": 8, "somewhat": [8, 10], "excess": 8, "fill": 8, "immedi": [8, 9], "convert": 8, "develop": 9, "frejing": 9, "karlstrom": 9, "2013": 9, "further": 9, "paper": [9, 11], "There": 9, "kei": 9, "given": 9, "seri": [9, 10], "coeffici": 9, "previous": 9, "releas": 9, "advanc": 9, "unfortun": 9, "variou": 9, "repair": 9, "run": [9, 10], "recursivelogit": 9, "classic": [9, 10], "v2": 9, "repo": 9, "script": 9, "rloptim": 9, "crash": 9, "hard": 9, "minimum": 9, "createsimulatedob": 9, "chang": [9, 10], "version": 9, "becom": 9, "intend": 9, "address": 9, "shortcom": 9, "few": 9, "box": 9, "clearli": 9, "explanatori": [9, 11], "introductori": 9, "materi": 9, "design": 9, "modular": 9, "aid": 9, "understand": 9, "my": 9, "math": 9, "honour": 9, "thesi": 9, "subsequ": 9, "emphasi": 9, "place": 9, "ensur": 9, "whilst": [9, 10], "still": 9, "were": 9, "made": 9, "respect": 9, "At": 9, "recursiveroutechoic": [9, 10, 11], "complet": 9, "independ": [9, 10], "inclus": 9, "slow": 9, "loop": 9, "deprec": 9, "favour": 9, "solver": 9, "acknowledg": 9, "result": 9, "our": 9, "numer": [9, 10], "experi": 9, "notabl": 9, "optimist": 9, "prior": 9, "literatur": 9, "investig": 9, "fundament": 9, "nontrivi": 9, "resolv": 9, "kind": 9, "adopt": 9, "dispar": 9, "explain": 9, "formul": 9, "prohibit": 9, "emploi": 9, "research": 9, "technic": 9, "alter": 9, "inconsist": 9, "those": [9, 11], "publish": 9, "github": 9, "readm": [9, 10], "now": [9, 10, 11], "present": [10, 11], "again": 10, "give": 10, "littl": 10, "sy": 10, "getcwd": 10, "listdir": 10, "network_fil": 10, "join": 10, "doc": 10, "siouxfalls_net": 10, "tntp": 10, "node_max": 10, "24": 10, "loader": 10, "easili": 10, "fit": 10, "memori": 10, "distanc": [10, 11], "data_list": 10, "pass": 10, "alongsid": 10, "everi": 10, "576": 10, "actual": 10, "omit": 10, "network_struct": [10, 11], "beta_sim": 10, "00015": 10, "sampl": 10, "quick": 10, "orig_indic": 10, "arang": 10, "obs_per_pair": [10, 11], "attempt": 10, "recov": 10, "measur": 10, "ten": 10, "thousand": 10, "beta_est_init": 10, "rise": 10, "degener": 10, "caught": 10, "2000": [10, 11], "seed": 10, "00001": 10, "model_est": 10, "beta_est": 10, "increas": 10, "trip": [10, 11], "accur": 10, "recoveri": 10, "8000": 10, "beta_actu": 10, "021": 10, "000175": 10, "One": 10, "7963": 10, "0002": 10, "drop": 10, "replac": 10, "ident": 10, "suffix": 10, "These": 10, "leverag": 10, "describ": 10, "rank": 10, "demonstr": 11, "revers": 11, "typic": 11, "pick": 11, "nice": 11, "extern": 11, "sourc": 11, "illustr": 11, "how": 11, "trivial": 11, "astyp": 11, "network_attribute_list": 11, "obs_indic": 11, "15": 11, "len": 11, "through": 11, "To": 11, "final": 11, "repetit": 11, "follow": 11, "reus": 11, "noqa": 11, "402": 11, "declar": 11}, "objects": {"recursiveRouteChoice": [[2, 0, 0, "-", "data_loading"], [3, 0, 0, "-", "data_processing"], [5, 0, 0, "-", "recursive_logit_efficient_update"], [6, 0, 0, "-", "recursive_route_choice"]], "recursiveRouteChoice.data_loading": [[2, 1, 1, "", "load_csv_to_sparse"], [2, 1, 1, "", "load_obs_from_json"], [2, 1, 1, "", "load_standard_path_format_csv"], [2, 1, 1, "", "load_tntp_node_formulation"], [2, 1, 1, "", "load_tntp_to_sparse_arc_formulation"], [2, 1, 1, "", "resize_to_dims"], [2, 1, 1, "", "write_obs_to_json"]], "recursiveRouteChoice.data_processing": [[3, 2, 1, "", "AngleProcessor"], [3, 1, 1, "", "get_incorrect_tien_turn_matrices"]], "recursiveRouteChoice.data_processing.AngleProcessor": [[3, 3, 1, "", "get_left_turn_categorical_matrix"], [3, 3, 1, "", "get_neutral_turn_categorical_matrix"], [3, 3, 1, "", "get_right_turn_categorical_matrix"], [3, 3, 1, "", "get_turn_categorical_matrices"], [3, 3, 1, "", "get_u_turn_categorical_matrix"], [3, 3, 1, "", "to_radians"]], "recursiveRouteChoice.optimisers": [[4, 0, 0, "-", "extra_optim"], [4, 0, 0, "-", "hessian_approx"], [4, 0, 0, "-", "line_search"], [4, 0, 0, "-", "optimisers_file"]], "recursiveRouteChoice.optimisers.extra_optim": [[4, 2, 1, "", "OptimFunctionState"]], "recursiveRouteChoice.optimisers.extra_optim.OptimFunctionState": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "val_grad_function"]], "recursiveRouteChoice.optimisers.hessian_approx": [[4, 2, 1, "", "OptimHessianType"], [4, 1, 1, "", "update_hessian_approx"]], "recursiveRouteChoice.optimisers.hessian_approx.OptimHessianType": [[4, 4, 1, "", "BFGS"]], "recursiveRouteChoice.optimisers.line_search": [[4, 2, 1, "", "LineSearchFlags"], [4, 1, 1, "", "line_search_asrch"], [4, 1, 1, "", "line_search_astep"]], "recursiveRouteChoice.optimisers.line_search.LineSearchFlags": [[4, 4, 1, "", "TERMINATION_INTERVAL_TOO_SMALL"], [4, 4, 1, "", "TERMINATION_MAX_FUNC_EVALS"], [4, 4, 1, "", "TERMINATION_ROUNDING_ERROR"], [4, 4, 1, "", "TERMINATION_STPMAX"], [4, 4, 1, "", "TERMINATION_STPMIN"], [4, 4, 1, "", "TERMINATION_STRONG_WOLFE_AND_STPMAX"], [4, 4, 1, "", "TERMINATION_STRONG_WOLFE_MET"]], "recursiveRouteChoice.optimisers.optimisers_file": [[4, 2, 1, "", "CustomOptimiserBase"], [4, 2, 1, "", "LineSearchOptimiser"], [4, 2, 1, "", "OptimType"], [4, 2, 1, "", "OptimiserBase"], [4, 2, 1, "", "ScipyOptimiser"], [4, 2, 1, "", "TrustRegionOptimiser"]], "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "check_stopping_criteria"], [4, 3, 1, "", "compute_relative_gradient_non_static"], [4, 3, 1, "", "iterate_step"], [4, 3, 1, "", "set_beta_vec"], [4, 3, 1, "", "set_current_value"]], "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser": [[4, 4, 1, "", "CURVATURE_CONDITION_PARAMETER"], [4, 4, 1, "", "INITIAL_STEP_LENGTH"], [4, 4, 1, "", "MAXIMUM_STEP_LENGTH"], [4, 4, 1, "", "METHOD_FLAG"], [4, 4, 1, "", "MINIMUM_STEP_LENGTH"], [4, 4, 1, "", "NEGATIVE_CURVATURE_PARAMETER"], [4, 4, 1, "", "SUFFICIENT_DECREASE_PARAMETER"], [4, 4, 1, "", "X_TOLERANCE"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "get_iteration_log"], [4, 3, 1, "", "iterate_step"]], "recursiveRouteChoice.optimisers.optimisers_file.OptimType": [[4, 4, 1, "", "LINE_SEARCH"], [4, 4, 1, "", "TRUST_REGION"]], "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase": [[4, 4, 1, "", "LL_ERROR_VALUE"], [4, 4, 1, "", "METHOD_FLAG"], [4, 4, 1, "", "NUMERICAL_ERROR_THRESH"], [4, 4, 1, "", "RESIDUAL"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "get_iteration_log"]], "recursiveRouteChoice.optimisers.optimisers_file.ScipyOptimiser": [[4, 4, 1, "", "METHOD_FLAG"], [4, 3, 1, "", "__init__"], [4, 3, 1, "", "solve"]], "recursiveRouteChoice.optimisers.optimisers_file.TrustRegionOptimiser": [[4, 4, 1, "", "METHOD_FLAG"], [4, 3, 1, "", "__init__"], [4, 4, 1, "", "method"]], "recursiveRouteChoice.recursive_logit_efficient_update": [[5, 2, 1, "", "DenseLUObj"], [5, 2, 1, "", "RecursiveLogitModelEstimationSM"], [5, 2, 1, "", "RecursiveLogitModelPredictionSM"]], "recursiveRouteChoice.recursive_logit_efficient_update.DenseLUObj": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "solve"]], "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "compute_value_function"], [5, 3, 1, "", "update_base_matrix_system"], [5, 3, 1, "", "update_beta_vec"]], "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelPredictionSM": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "update_base_matrix_system"]], "recursiveRouteChoice.recursive_route_choice": [[6, 2, 1, "", "ModelDataStruct"], [6, 2, 1, "", "RecursiveLogitModel"], [6, 2, 1, "", "RecursiveLogitModelEstimation"], [6, 2, 1, "", "RecursiveLogitModelPrediction"]], "recursiveRouteChoice.recursive_route_choice.ModelDataStruct": [[6, 3, 1, "", "__init__"]], "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "compute_value_function"], [6, 3, 1, "", "get_beta_vec"], [6, 3, 1, "", "get_exponential_utility_matrix"], [6, 3, 1, "", "get_short_term_utility"], [6, 4, 1, "", "zeros_error_override"]], "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "eval_log_like_at_new_beta"], [6, 3, 1, "", "get_log_likelihood"], [6, 3, 1, "", "get_value_func_grad_orig"], [6, 3, 1, "", "solve_for_optimal_beta"], [6, 3, 1, "", "update_beta_vec"]], "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelPrediction": [[6, 3, 1, "", "generate_observations"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"recursiveroutechoic": [0, 1, 2, 3, 4, 5, 6, 7], "packag": 1, "submodul": [1, 4], "data": [2, 3, 8], "load": 2, "data_load": 2, "preprocess": 3, "data_process": 3, "optimis": 4, "main": [4, 6], "us": 4, "case": 4, "optimisers_fil": 4, "other": 4, "file": 4, "minim": 4, "public": 4, "api": [4, 7], "extra_optim": 4, "modul": 4, "hessian_approx": 4, "line_search": 4, "model": [5, 6], "sherman": 5, "morrison": 5, "variant": 5, "recursive_logit_efficient_upd": 5, "recurs": 6, "logit": 6, "implement": 6, "recursive_route_choic": 6, "document": 7, "introduct": 7, "overview": [7, 9], "refer": 7, "indic": 7, "tabl": 7, "format": 8, "support": 8, "assumpt": 8, "observ": 8, "some": 8, "quirk": 8, "json": 8, "prefer": 8, "coo": 8, "instal": 9, "sioux": 10, "fall": 10, "exampl": [10, 11], "effici": 10, "A": 11, "simpl": 11, "predict": 11, "estim": 11}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"recursiveRouteChoice": [[0, "recursiveroutechoice"]], "recursiveRouteChoice package": [[1, "recursiveroutechoice-package"]], "Submodules": [[1, "submodules"]], "Data Loading: (recursiveRouteChoice.data_loading)": [[2, "module-recursiveRouteChoice.data_loading"]], "Data Preprocessing: (recursiveRouteChoice.data_processing)": [[3, "module-recursiveRouteChoice.data_processing"]], "Optimisers Submodule: Main use case": [[4, "optimisers-submodule-main-use-case"]], "recursiveRouteChoice.optimisers.optimisers_file": [[4, "recursiveroutechoice-optimisers-optimisers-file"]], "Optimisers Submodule: Other files with minimal public API": [[4, "optimisers-submodule-other-files-with-minimal-public-api"]], "recursiveRouteChoice.optimisers.extra_optim module": [[4, "module-recursiveRouteChoice.optimisers.extra_optim"]], "recursiveRouteChoice.optimisers.hessian_approx module": [[4, "module-recursiveRouteChoice.optimisers.hessian_approx"]], "recursiveRouteChoice.optimisers.line_search module": [[4, "module-recursiveRouteChoice.optimisers.line_search"]], "Model: Sherman Morrison Variant (recursiveRouteChoice.recursive_logit_efficient_update)": [[5, "model-sherman-morrison-variant-recursiveroutechoice-recursive-logit-efficient-update"]], "Model: Main Recursive Logit Implementation (recursiveRouteChoice.recursive_route_choice)": [[6, "model-main-recursive-logit-implementation-recursiveroutechoice-recursive-route-choice"]], "Documentation for RecursiveRouteChoice": [[7, "documentation-for-recursiveroutechoice"]], "Introduction & Overview:": [[7, null]], "API Reference:": [[7, null]], "Indices and tables": [[7, "indices-and-tables"]], "Data Format Support": [[8, "data-format-support"]], "Assumptions on Observation Data Formats": [[8, "assumptions-on-observation-data-formats"]], "Some quirks": [[8, "some-quirks"]], "JSON format (preferred):": [[8, "json-format-preferred"]], "COO format:": [[8, "coo-format"]], "Overview": [[9, "overview"]], "Installation": [[9, "installation"]], "Sioux Falls Example": [[10, "sioux-falls-example"]], "Efficiency": [[10, "efficiency"]], "A Simple Example": [[11, "a-simple-example"]], "Prediction": [[11, "prediction"]], "Estimation": [[11, "estimation"]]}, "indexentries": {"load_csv_to_sparse() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.load_csv_to_sparse"]], "load_obs_from_json() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.load_obs_from_json"]], "load_standard_path_format_csv() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.load_standard_path_format_csv"]], "load_tntp_node_formulation() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.load_tntp_node_formulation"]], "load_tntp_to_sparse_arc_formulation() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.load_tntp_to_sparse_arc_formulation"]], "module": [[2, "module-recursiveRouteChoice.data_loading"], [3, "module-recursiveRouteChoice.data_processing"], [4, "module-recursiveRouteChoice.optimisers.extra_optim"], [4, "module-recursiveRouteChoice.optimisers.hessian_approx"], [4, "module-recursiveRouteChoice.optimisers.line_search"], [4, "module-recursiveRouteChoice.optimisers.optimisers_file"], [5, "module-recursiveRouteChoice.recursive_logit_efficient_update"], [6, "module-recursiveRouteChoice.recursive_route_choice"]], "recursiveroutechoice.data_loading": [[2, "module-recursiveRouteChoice.data_loading"]], "resize_to_dims() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.resize_to_dims"]], "write_obs_to_json() (in module recursiveroutechoice.data_loading)": [[2, "recursiveRouteChoice.data_loading.write_obs_to_json"]], "angleprocessor (class in recursiveroutechoice.data_processing)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor"]], "get_incorrect_tien_turn_matrices() (in module recursiveroutechoice.data_processing)": [[3, "recursiveRouteChoice.data_processing.get_incorrect_tien_turn_matrices"]], "get_left_turn_categorical_matrix() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.get_left_turn_categorical_matrix"]], "get_neutral_turn_categorical_matrix() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.get_neutral_turn_categorical_matrix"]], "get_right_turn_categorical_matrix() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.get_right_turn_categorical_matrix"]], "get_turn_categorical_matrices() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.get_turn_categorical_matrices"]], "get_u_turn_categorical_matrix() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.get_u_turn_categorical_matrix"]], "recursiveroutechoice.data_processing": [[3, "module-recursiveRouteChoice.data_processing"]], "to_radians() (recursiveroutechoice.data_processing.angleprocessor class method)": [[3, "recursiveRouteChoice.data_processing.AngleProcessor.to_radians"]], "bfgs (recursiveroutechoice.optimisers.hessian_approx.optimhessiantype attribute)": [[4, "recursiveRouteChoice.optimisers.hessian_approx.OptimHessianType.BFGS"]], "curvature_condition_parameter (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.CURVATURE_CONDITION_PARAMETER"]], "customoptimiserbase (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase"]], "initial_step_length (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.INITIAL_STEP_LENGTH"]], "line_search (recursiveroutechoice.optimisers.optimisers_file.optimtype attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimType.LINE_SEARCH"]], "ll_error_value (recursiveroutechoice.optimisers.optimisers_file.optimiserbase attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.LL_ERROR_VALUE"]], "linesearchflags (class in recursiveroutechoice.optimisers.line_search)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags"]], "linesearchoptimiser (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser"]], "maximum_step_length (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.MAXIMUM_STEP_LENGTH"]], "method_flag (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.METHOD_FLAG"]], "method_flag (recursiveroutechoice.optimisers.optimisers_file.optimiserbase attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.METHOD_FLAG"]], "method_flag (recursiveroutechoice.optimisers.optimisers_file.scipyoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.ScipyOptimiser.METHOD_FLAG"]], "method_flag (recursiveroutechoice.optimisers.optimisers_file.trustregionoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.TrustRegionOptimiser.METHOD_FLAG"]], "minimum_step_length (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.MINIMUM_STEP_LENGTH"]], "negative_curvature_parameter (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.NEGATIVE_CURVATURE_PARAMETER"]], "numerical_error_thresh (recursiveroutechoice.optimisers.optimisers_file.optimiserbase attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.NUMERICAL_ERROR_THRESH"]], "optimfunctionstate (class in recursiveroutechoice.optimisers.extra_optim)": [[4, "recursiveRouteChoice.optimisers.extra_optim.OptimFunctionState"]], "optimhessiantype (class in recursiveroutechoice.optimisers.hessian_approx)": [[4, "recursiveRouteChoice.optimisers.hessian_approx.OptimHessianType"]], "optimtype (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimType"]], "optimiserbase (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase"]], "residual (recursiveroutechoice.optimisers.optimisers_file.optimiserbase attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.RESIDUAL"]], "sufficient_decrease_parameter (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.SUFFICIENT_DECREASE_PARAMETER"]], "scipyoptimiser (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.ScipyOptimiser"]], "termination_interval_too_small (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_INTERVAL_TOO_SMALL"]], "termination_max_func_evals (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_MAX_FUNC_EVALS"]], "termination_rounding_error (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_ROUNDING_ERROR"]], "termination_stpmax (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_STPMAX"]], "termination_stpmin (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_STPMIN"]], "termination_strong_wolfe_and_stpmax (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_STRONG_WOLFE_AND_STPMAX"]], "termination_strong_wolfe_met (recursiveroutechoice.optimisers.line_search.linesearchflags attribute)": [[4, "recursiveRouteChoice.optimisers.line_search.LineSearchFlags.TERMINATION_STRONG_WOLFE_MET"]], "trust_region (recursiveroutechoice.optimisers.optimisers_file.optimtype attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimType.TRUST_REGION"]], "trustregionoptimiser (class in recursiveroutechoice.optimisers.optimisers_file)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.TrustRegionOptimiser"]], "x_tolerance (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.X_TOLERANCE"]], "__init__() (recursiveroutechoice.optimisers.extra_optim.optimfunctionstate method)": [[4, "recursiveRouteChoice.optimisers.extra_optim.OptimFunctionState.__init__"]], "__init__() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.__init__"]], "__init__() (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.__init__"]], "__init__() (recursiveroutechoice.optimisers.optimisers_file.optimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.__init__"]], "__init__() (recursiveroutechoice.optimisers.optimisers_file.scipyoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.ScipyOptimiser.__init__"]], "__init__() (recursiveroutechoice.optimisers.optimisers_file.trustregionoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.TrustRegionOptimiser.__init__"]], "check_stopping_criteria() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.check_stopping_criteria"]], "compute_relative_gradient_non_static() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.compute_relative_gradient_non_static"]], "get_iteration_log() (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.get_iteration_log"]], "get_iteration_log() (recursiveroutechoice.optimisers.optimisers_file.optimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.OptimiserBase.get_iteration_log"]], "iterate_step() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.iterate_step"]], "iterate_step() (recursiveroutechoice.optimisers.optimisers_file.linesearchoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.LineSearchOptimiser.iterate_step"]], "line_search_asrch() (in module recursiveroutechoice.optimisers.line_search)": [[4, "recursiveRouteChoice.optimisers.line_search.line_search_asrch"]], "line_search_astep() (in module recursiveroutechoice.optimisers.line_search)": [[4, "recursiveRouteChoice.optimisers.line_search.line_search_astep"]], "method (recursiveroutechoice.optimisers.optimisers_file.trustregionoptimiser attribute)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.TrustRegionOptimiser.method"]], "recursiveroutechoice.optimisers.extra_optim": [[4, "module-recursiveRouteChoice.optimisers.extra_optim"]], "recursiveroutechoice.optimisers.hessian_approx": [[4, "module-recursiveRouteChoice.optimisers.hessian_approx"]], "recursiveroutechoice.optimisers.line_search": [[4, "module-recursiveRouteChoice.optimisers.line_search"]], "recursiveroutechoice.optimisers.optimisers_file": [[4, "module-recursiveRouteChoice.optimisers.optimisers_file"]], "set_beta_vec() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.set_beta_vec"]], "set_current_value() (recursiveroutechoice.optimisers.optimisers_file.customoptimiserbase method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.CustomOptimiserBase.set_current_value"]], "solve() (recursiveroutechoice.optimisers.optimisers_file.scipyoptimiser method)": [[4, "recursiveRouteChoice.optimisers.optimisers_file.ScipyOptimiser.solve"]], "update_hessian_approx() (in module recursiveroutechoice.optimisers.hessian_approx)": [[4, "recursiveRouteChoice.optimisers.hessian_approx.update_hessian_approx"]], "val_grad_function() (recursiveroutechoice.optimisers.extra_optim.optimfunctionstate method)": [[4, "recursiveRouteChoice.optimisers.extra_optim.OptimFunctionState.val_grad_function"]], "denseluobj (class in recursiveroutechoice.recursive_logit_efficient_update)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.DenseLUObj"]], "recursivelogitmodelestimationsm (class in recursiveroutechoice.recursive_logit_efficient_update)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM"]], "recursivelogitmodelpredictionsm (class in recursiveroutechoice.recursive_logit_efficient_update)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelPredictionSM"]], "__init__() (recursiveroutechoice.recursive_logit_efficient_update.denseluobj method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.DenseLUObj.__init__"]], "__init__() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelestimationsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM.__init__"]], "__init__() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelpredictionsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelPredictionSM.__init__"]], "compute_value_function() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelestimationsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM.compute_value_function"]], "recursiveroutechoice.recursive_logit_efficient_update": [[5, "module-recursiveRouteChoice.recursive_logit_efficient_update"]], "solve() (recursiveroutechoice.recursive_logit_efficient_update.denseluobj method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.DenseLUObj.solve"]], "update_base_matrix_system() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelestimationsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM.update_base_matrix_system"]], "update_base_matrix_system() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelpredictionsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelPredictionSM.update_base_matrix_system"]], "update_beta_vec() (recursiveroutechoice.recursive_logit_efficient_update.recursivelogitmodelestimationsm method)": [[5, "recursiveRouteChoice.recursive_logit_efficient_update.RecursiveLogitModelEstimationSM.update_beta_vec"]], "modeldatastruct (class in recursiveroutechoice.recursive_route_choice)": [[6, "recursiveRouteChoice.recursive_route_choice.ModelDataStruct"]], "recursivelogitmodel (class in recursiveroutechoice.recursive_route_choice)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel"]], "recursivelogitmodelestimation (class in recursiveroutechoice.recursive_route_choice)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation"]], "recursivelogitmodelprediction (class in recursiveroutechoice.recursive_route_choice)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelPrediction"]], "__init__() (recursiveroutechoice.recursive_route_choice.modeldatastruct method)": [[6, "recursiveRouteChoice.recursive_route_choice.ModelDataStruct.__init__"]], "__init__() (recursiveroutechoice.recursive_route_choice.recursivelogitmodel method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.__init__"]], "__init__() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.__init__"]], "compute_value_function() (recursiveroutechoice.recursive_route_choice.recursivelogitmodel method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.compute_value_function"]], "eval_log_like_at_new_beta() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.eval_log_like_at_new_beta"]], "generate_observations() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelprediction method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelPrediction.generate_observations"]], "get_beta_vec() (recursiveroutechoice.recursive_route_choice.recursivelogitmodel method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.get_beta_vec"]], "get_exponential_utility_matrix() (recursiveroutechoice.recursive_route_choice.recursivelogitmodel method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.get_exponential_utility_matrix"]], "get_log_likelihood() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.get_log_likelihood"]], "get_short_term_utility() (recursiveroutechoice.recursive_route_choice.recursivelogitmodel method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.get_short_term_utility"]], "get_value_func_grad_orig() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.get_value_func_grad_orig"]], "recursiveroutechoice.recursive_route_choice": [[6, "module-recursiveRouteChoice.recursive_route_choice"]], "solve_for_optimal_beta() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.solve_for_optimal_beta"]], "update_beta_vec() (recursiveroutechoice.recursive_route_choice.recursivelogitmodelestimation method)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModelEstimation.update_beta_vec"]], "zeros_error_override (recursiveroutechoice.recursive_route_choice.recursivelogitmodel attribute)": [[6, "recursiveRouteChoice.recursive_route_choice.RecursiveLogitModel.zeros_error_override"]]}})